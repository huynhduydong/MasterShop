server:
  port: 8081

spring:
  application:
    name: api-gateway
  redis:
    enabled: false  # Disable Redis
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
      routes:
        - id: auth-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth
            - name: RequestRateLimiter
              args:
                # Use in-memory rate limiter instead of Redis
                local-rate-limiter.replenishRate: 10
                local-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
        - id: product-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCircuitBreaker
                fallbackUri: forward:/fallback/product
            - name: RequestRateLimiter
              args:
                local-rate-limiter.replenishRate: 20
                local-rate-limiter.burstCapacity: 40
                key-resolver: "#{@ipKeyResolver}"
        - id: order-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/order
            - name: RequestRateLimiter
              args:
                local-rate-limiter.replenishRate: 10
                local-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
        - id: user-service
          uri: http://localhost:8085
          predicates:
            - Path=/api/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/user
            - name: RequestRateLimiter
              args:
                local-rate-limiter.replenishRate: 10
                local-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
        - id: cart-service
          uri: http://localhost:8086
          predicates:
            - Path=/api/carts/**
          filters:
            - name: CircuitBreaker
              args:
                name: cartCircuitBreaker
                fallbackUri: forward:/fallback/cart
            - name: RequestRateLimiter
              args:
                local-rate-limiter.replenishRate: 20
                local-rate-limiter.burstCapacity: 40
                key-resolver: "#{@ipKeyResolver}"

eureka:
  client:
    enabled: false
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    hostname: localhost

management:
  endpoints:
    web:
      exposure:
        include: "*"

resilience4j:
  circuitbreaker:
    instances:
      authCircuitBreaker:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      productCircuitBreaker:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      orderCircuitBreaker:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      userCircuitBreaker:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      cartCircuitBreaker:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3

jwt:
  secret: masterShopSecretKey2023MasterShopSecretKey2023MasterShopSecretKey2023
  expiration: 86400000 # 1 day in milliseconds 