server:
  port: 8080
  # Optimize server performance
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    max-connections: 10000
    connection-timeout: 5000

spring:
  application:
    name: api-gateway
  # Enable caching for better performance
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterAccess=600s
  cloud:
    gateway:
      # Enable metrics collection
      metrics:
        enabled: true
      # Optimize discovery client
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      # Configure default filters for all routes
      default-filters:
        - name: RequestSize
          args:
            maxSize: 5MB
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
            methods: GET,POST
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCircuitBreaker
                fallbackUri: forward:/fallback/product
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/order
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/user
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=/api/carts/**
          filters:
            - name: CircuitBreaker
              args:
                name: cartCircuitBreaker
                fallbackUri: forward:/fallback/cart

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    # Optimize Eureka client
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    hostname: localhost
    # Optimize instance registration
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
    instances:
      authCircuitBreaker:
        baseConfig: default
      productCircuitBreaker:
        baseConfig: default
      orderCircuitBreaker:
        baseConfig: default
      userCircuitBreaker:
        baseConfig: default
      cartCircuitBreaker:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s
    instances:
      authCircuitBreaker:
        baseConfig: default
      productCircuitBreaker:
        baseConfig: default
      orderCircuitBreaker:
        baseConfig: default
      userCircuitBreaker:
        baseConfig: default
      cartCircuitBreaker:
        baseConfig: default

jwt:
  secret: masterShopSecretKey2023MasterShopSecretKey2023MasterShopSecretKey2023
  expiration: 86400000 # 1 day in milliseconds 